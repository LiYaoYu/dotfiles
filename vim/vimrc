set nocompatible
filetype off
set rtp+=~/.vim/bundle/vundle/
set rtp+=$GOPATH/src/golang.org/x/lint/misc/vim
call vundle#rc()


" plugins manager
Plugin 'gmarik/vundle'

" files exploring
Plugin 'scrooloose/nerdtree'

" code autocompletion
Plugin 'Valloric/YouCompleteMe'

" files/codes fuzzy exploring
Plugin 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plugin 'junegunn/fzf.vim'

" golang environment
Plugin 'fatih/vim-go'


" detect the language and turn on the color
syntax on

" change the comfirmation color
set bg=dark

" set background color
hi Normal ctermbg=233

" line number
set nu

" enable line number with colors
hi LineNr cterm=bold ctermfg=DarkGrey
hi CursorLineNr cterm=bold ctermfg=Green

" set 110 characters reminder
let &colorcolumn=join(range(111,999),",")
hi ColorColumn ctermbg=232

" highlight current cursor line
set cursorline
hi CursorLine cterm=none ctermbg=234

" config vimdiff colors
hi DiffAdd    cterm=bold ctermfg=black ctermbg=green
hi DiffDelete cterm=bold ctermfg=none ctermbg=red
hi DiffText   cterm=bold ctermfg=black ctermbg=green
hi DiffChange ctermfg=none ctermbg=none

" set encoding
set encoding=utf-8

" remain indent
set ai

" need confirmation before exit
set confirm

" do not change lines
set nowrap

" jump to current searching string with case insensitive and immediately
set ic
set incsearch

" enable mouse in vim
set mouse=a
set ttymouse=xterm2

" settings for status line
set statusline=
set statusline+=%2*\ %<%F\                                " File+path
set statusline+=%3*\ %=\ %{''.(&fenc!=''?&fenc:&enc).''}\ " Encoding
set statusline+=%6*\ %5l,%3c\                             " RowColnumber
set statusline+=%0*\ \ %m%r%w\ %P\ \                      " File Status Top/Bot
hi User2 ctermfg=15  ctermbg=237
hi User3 ctermfg=15  ctermbg=237
hi User6 ctermfg=0  ctermbg=32
set laststatus=2

" brackets complement
imap {<CR> {<CR>}<Esc>ko<Tab>

" shortcuts for navigation between splited windows
nmap <C-J> <C-W><C-J>
nmap <C-K> <C-W><C-K>
nmap <C-L> <C-W><C-L>
nmap <C-H> <C-W><C-H>

" vertical split current file
nmap <F2> :vsplit %:p<CR>

" resize windows
nmap , <C-W><
nmap . <C-W>>

" search and replace words
nmap <F3> "zyiw:exe " Ag ".@z.""<CR>
nmap <F4> :cdo %s///gc <Left><Left><Left><Left><Left>

" plugin shortcut commands
nmap <F5> <Esc>:call RgExtension()<CR>
nmap <F6> :Files<CR>
nmap <F7> :NERDTree<CR>

" roll the tab
nmap <F9> gT
nmap <F10> gt

" load specific plugins based on filetype
filetype plugin on

" settings for fzf
let g:fzf_layout = { 'down': '~20%' }
let g:fzf_action = { 'ctrl-v': 'vsplit' }

" settings for YouCompleteMe
let g:ycm_global_ycm_extra_conf = '~/.ycm_extra_conf.py'
let g:ycm_confirm_extra_conf = 0
let g:ycm_python_binary_path = '/usr/bin/python3'
let g:ycm_extra_conf_vim_data = ['&filetype']
let g:ycm_filepath_completion_use_working_dir = 1
let g:ycm_show_diagnostics_ui = 0
let g:ycm_autoclose_preview_window_after_completion = 1

" function definitions for calls above
fun! RgExtension()
  let target = input(":Rg ")

  exec "normal mX"
  exec "Rg ". target
  exec "normal mY"
endfun

fun! ShowFuncName()
  let lnum = line(".")
  let col = col(".")
  echohl ModeMsg
  echo getline(search("^[^ \t#/]\\{2}.*[^:]\s*$", 'bW'))
  echohl None
  call search("\\%" . lnum . "l" . "\\%" . col . "c")
endfun

fun! AutoUpdateCscopeAndCtags()
  let UpdateCscopeDB = 'cscope -Rb'
  let Res = system(UpdateCscopeDB)
  unlet UpdateCscopeDB
  unlet Res
  silent exec "cs kill -1"
  silent exec "cs add cscope.out"
endfun
